{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "description": "Deploy Persona Bot (Streamlit) with Azure OpenAI GPT-4o-mini, managed identity, monitoring, secure defaults, and automatic GitHub deployment."
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": { "description": "Azure region (must support Azure OpenAI)." }
    },
    "environment": {
      "type": "string",
      "defaultValue": "dev",
      "allowedValues": ["dev", "test", "staging", "prod"],
      "metadata": { "description": "Deployment stage used in resource name prefix." }
    },
    "appServicePlanSku": {
      "type": "string",
      "defaultValue": "B1",
      "allowedValues": ["B1", "B2", "B3", "S1", "S2", "S3", "P1v2", "P2v2", "P3v2"],
      "metadata": { "description": "App Service Plan SKU (Linux)." }
    },
    "openAiDeploymentName": {
      "type": "string",
      "defaultValue": "gpt4mini",
      "metadata": { "description": "Logical deployment name referenced by the application." }
    },
    "openAiModelName": {
      "type": "string",
      "defaultValue": "gpt-4o-mini",
      "allowedValues": ["gpt-4o-mini"],
      "metadata": { "description": "Azure OpenAI model name (restricted to GPT-4o-mini)." }
    },
    "openAiModelVersion": {
      "type": "string",
      "defaultValue": "2024-07-18",
      "metadata": { "description": "Model version for GPT-4o-mini." }
    },
    "openAiCapacity": {
      "type": "int",
      "defaultValue": 60,
      "minValue": 1,
      "metadata": { "description": "Throughput units for the model (ensure subscription quota permits)." }
    },
    "enableMonitoring": {
      "type": "bool",
      "defaultValue": true,
      "metadata": { "description": "Deploy Application Insights + Log Analytics." }
    },
    "restrictOpenAiPublicAccess": {
      "type": "bool",
      "defaultValue": false,
      "metadata": { "description": "Disable public network access on the Azure OpenAI account (requires private networking not included here)." }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": { "description": "Optional tags applied to top-level resources." }
    }
  },
  "variables": {
    "unique": "[uniqueString(resourceGroup().id)]",
    "prefix": "[concat('persona', '-', parameters('environment'), '-', variables('unique'))]",
    "openAiAccountName": "[concat(variables('prefix'), '-aoai')]",
    "planName": "[concat(variables('prefix'), '-plan')]",
    "webAppName": "[concat(variables('prefix'), '-webapp')]",
    "appInsightsName": "[concat(variables('prefix'), '-ai')]",
    "logWorkspaceName": "[concat(variables('prefix'), '-logs')]"
  },
  "resources": [
    {
      "condition": "[parameters('enableMonitoring')]",
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2021-06-01",
      "name": "[variables('logWorkspaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": { "name": "PerGB2018" }
      },
      "tags": "[parameters('tags')]"
    },
    {
      "condition": "[parameters('enableMonitoring')]",
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('appInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logWorkspaceName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logWorkspaceName'))]"
      ],
      "tags": "[parameters('tags')]"
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2024-10-01",
      "name": "[variables('openAiAccountName')]",
      "location": "[parameters('location')]",
      "kind": "OpenAI",
      "sku": { "name": "S0" },
      "properties": {
        "publicNetworkAccess": "[if(parameters('restrictOpenAiPublicAccess'), 'Disabled', 'Enabled')]",
        "customSubDomainName": "[variables('openAiAccountName')]",
        "disableLocalAuth": true
      },
      "tags": "[parameters('tags')]"
    },
    {
      "type": "Microsoft.CognitiveServices/accounts/deployments",
      "apiVersion": "2024-10-01",
      "name": "[format('{0}/{1}', variables('openAiAccountName'), parameters('openAiDeploymentName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('openAiAccountName'))]"
      ],
      "sku": {
        "name": "Standard",
        "capacity": "[parameters('openAiCapacity')]"
      },
      "properties": {
        "model": {
          "format": "OpenAI",
          "name": "[parameters('openAiModelName')]",
          "version": "[parameters('openAiModelVersion')]"
        },
        "versionUpgradeOption": "OnceCurrentVersionExpired",
        "raiPolicyName": "Microsoft.Default"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-03-01",
      "name": "[variables('planName')]",
      "location": "[parameters('location')]",
      "sku": { "name": "[parameters('appServicePlanSku')]", "capacity": 1 },
      "kind": "linux",
      "properties": { "reserved": true },
      "tags": "[parameters('tags')]"
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-09-01",
      "name": "[variables('webAppName')]",
      "location": "[parameters('location')]",
      "identity": { "type": "SystemAssigned" },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('planName'))]",
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('openAiAccountName'))]"
      ],
      "properties": {
        "httpsOnly": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('planName'))]",
        "siteConfig": {
          "linuxFxVersion": "PYTHON|3.11",
          "appCommandLine": "python -m streamlit run webapp/app.py --server.port 8000 --server.address 0.0.0.0",
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "appSettings": [
            { "name": "AZURE_OPENAI_ENDPOINT", "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', variables('openAiAccountName'))).endpoint]" },
            { "name": "AZURE_OPENAI_DEPLOYMENT_NAME", "value": "[parameters('openAiDeploymentName')]" },
            { "name": "AZURE_OPENAI_MODEL_NAME", "value": "[parameters('openAiModelName')]" },
            { "name": "AZURE_OPENAI_MODEL_VERSION", "value": "[parameters('openAiModelVersion')]" },
            { "name": "SCM_DO_BUILD_DURING_DEPLOYMENT", "value": "true" },
            { "name": "ENABLE_ORYX_BUILD", "value": "true" },
            { "name": "STREAMLIT_SERVER_PORT", "value": "8000" },
            { "name": "STREAMLIT_SERVER_ADDRESS", "value": "0.0.0.0" },
            { "name": "STREAMLIT_SERVER_ENABLE_CORS", "value": "false" },
            { "name": "STREAMLIT_SERVER_ENABLE_XSRF_PROTECTION", "value": "false" },
            { "name": "STREAMLIT_BROWSER_GATHER_USAGE_STATS", "value": "false" },
            { "name": "APPLICATIONINSIGHTS_CONNECTION_STRING", "value": "[if(parameters('enableMonitoring'), reference(resourceId('Microsoft.Insights/components', variables('appInsightsName'))).ConnectionString, '')]" }
          ]
        }
      },
      "tags": "[parameters('tags')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "roleAssignOpenAiUser",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('webAppName'))]",
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('openAiAccountName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(resourceId('Microsoft.Web/sites', variables('webAppName')), resourceId('Microsoft.CognitiveServices/accounts', variables('openAiAccountName')), 'OpenAIUser')]",
              "scope": "[resourceId('Microsoft.CognitiveServices/accounts', variables('openAiAccountName'))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '5e0bd9bd-7b93-4f28-af87-19fc36ad61bd')]",
                "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('webAppName')), '2022-09-01', 'full').identity.principalId]",
                "principalType": "ServicePrincipal"
              }
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "webAppUrl": { "type": "string", "value": "[concat('https://', reference(resourceId('Microsoft.Web/sites', variables('webAppName'))).defaultHostName)]" },
    "openAiEndpoint": { "type": "string", "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', variables('openAiAccountName'))).endpoint]" },
    "openAiDeploymentName": { "type": "string", "value": "[parameters('openAiDeploymentName')]" },
    "webAppPrincipalId": { "type": "string", "value": "[reference(resourceId('Microsoft.Web/sites', variables('webAppName')), '2022-09-01', 'full').identity.principalId]" }
  }
}