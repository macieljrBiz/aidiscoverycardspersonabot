#!/bin/bash

# Local Development Setup Script for Persona Bot
# This script helps set up local development permissions for Azure OpenAI

set -e

echo "🤖 Persona Bot - Local Development Setup"
echo "========================================"

# Check if Azure CLI is installed
if ! command -v az &> /dev/null; then
    echo "❌ Azure CLI is not installed. Please install it first:"
    echo "   https://docs.microsoft.com/en-us/cli/azure/install-azure-cli"
    exit 1
fi

# Check if user is logged in
if ! az account show &> /dev/null; then
    echo "🔐 Please login to Azure first:"
    az login
fi

# Get current subscription
SUBSCRIPTION_ID=$(az account show --query id -o tsv)
SUBSCRIPTION_NAME=$(az account show --query name -o tsv)
echo "📋 Current subscription: $SUBSCRIPTION_NAME ($SUBSCRIPTION_ID)"

# Prompt for resource details
echo ""
echo "Please provide the following information:"
read -p "📧 Your Azure user email: " USER_EMAIL
read -p "🏢 Resource group name: " RESOURCE_GROUP
read -p "🧠 Azure OpenAI resource name: " OPENAI_RESOURCE_NAME

echo ""
echo "🔍 Validating inputs..."

# Get user object ID
USER_OBJECT_ID=$(az ad user show --id "$USER_EMAIL" --query id -o tsv 2>/dev/null) || {
    echo "❌ Error: Could not find user with email $USER_EMAIL"
    exit 1
}

echo "✅ Found user: $USER_EMAIL (ID: $USER_OBJECT_ID)"

# Check if resource group exists
if ! az group show --name "$RESOURCE_GROUP" &> /dev/null; then
    echo "❌ Error: Resource group '$RESOURCE_GROUP' does not exist"
    exit 1
fi

echo "✅ Found resource group: $RESOURCE_GROUP"

# Check if OpenAI resource exists
if ! az cognitiveservices account show --name "$OPENAI_RESOURCE_NAME" --resource-group "$RESOURCE_GROUP" &> /dev/null; then
    echo "❌ Error: Azure OpenAI resource '$OPENAI_RESOURCE_NAME' does not exist in resource group '$RESOURCE_GROUP'"
    exit 1
fi

echo "✅ Found Azure OpenAI resource: $OPENAI_RESOURCE_NAME"

# Create role assignment
echo ""
echo "🔑 Assigning 'Cognitive Services OpenAI User' role..."

RESOURCE_SCOPE="/subscriptions/$SUBSCRIPTION_ID/resourceGroups/$RESOURCE_GROUP/providers/Microsoft.CognitiveServices/accounts/$OPENAI_RESOURCE_NAME"

if az role assignment create \
    --assignee "$USER_OBJECT_ID" \
    --role "Cognitive Services OpenAI User" \
    --scope "$RESOURCE_SCOPE" &> /dev/null; then
    echo "✅ Successfully assigned role to $USER_EMAIL"
else
    echo "ℹ️  Role assignment already exists or completed"
fi

# Get OpenAI endpoint
OPENAI_ENDPOINT=$(az cognitiveservices account show \
    --name "$OPENAI_RESOURCE_NAME" \
    --resource-group "$RESOURCE_GROUP" \
    --query properties.endpoint -o tsv)

echo ""
echo "📝 Creating .env file..."

# Create .env file
cat > ../webapp/.env << EOF
# Azure OpenAI Configuration (Managed Identity)
# Generated by setup script on $(date)

AZURE_OPENAI_ENDPOINT=$OPENAI_ENDPOINT
AZURE_OPENAI_API_VERSION=2024-08-01-preview
AZURE_OPENAI_DEPLOYMENT_NAME=gpt-4o-mini
EOF

echo "✅ Created .env file at webapp/.env"

echo ""
echo "🎉 Setup complete! You can now run the application locally:"
echo ""
echo "   cd webapp"
echo "   pip install -r requirements.txt"
echo "   streamlit run app.py"
echo ""
echo "📚 For more information, see the README.md file"